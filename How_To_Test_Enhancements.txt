---------------------------------
How to run the automatated tests
---------------------------------

1. If running on core teaching servers - the make command may not work with the tests. 

Compile the program using the following code instead:

g++ -Wall -Werror -std=c++14 -O -o assign2 main.cpp Menu.cpp Input.cpp ./Components/Node.cpp ./Components/Tile.cpp  ./Components/Factory.cpp ./Player/BrokenTiles.cpp ./Player/Mosaic.cpp ./Player/MosaicStorage.cpp ./Player/Player.cpp  ./GameEngine/GameEngine.cpp ./GameEngine/GameEngineCallback.cpp ./GameEngine/GameEngineIO.cpp ./Components/LinkedList.cpp

2. Drag all files in "Tests/{enhancement}/all_tests" into the root directory

3. Open terminal and type: bash "{corresponding name bash file}"

-------------------------
TESTS for Grey Board Mode
-------------------------
Corresponding name bash file to run: "run_grey_tests.sh"

Test 1: Tests the ability to move tiles from storage row to mosaic manually; tests the command and column prompt works.
Test 2: Tests that ability to move tiles from storage row to broken tiles manually; tests the command and column prompt works.
Test 3: Tests one full round of gameplay. 
Test 4: Tests the special case; i.e. when a player gets into a dead-end and has no choice but to move their tiles to broken tiles. Also tests necessary validation before this move. 
Test 5: Tests the entire system by playing a whole new game to completion.
Test 6: Tests the invalid row condition validation works.
Test 7: Tests the invalid column condition validation works.

---------------------------------
TESTS for Orange 6 x 6 Board Mode
---------------------------------
Corresponding bash file to run: "run_orange_tests.sh"

Test 1: Tests the 6th storage row is accessible and tiles can be moved from the storage area to the 6th mosaic row. 
Test 2: Tests that the 8th slot of broken tiles is accessible and deducts the correct amount of points. 
Test 3: Tests the player gets the correct amount of points for getting horizontal sequential tiles.
Test 4: Tests the player gets the correct amount of points for getting vertical sequential tiles.
Test 5: Tests the player gets the correct amount of points for getting vertical and horizontal sequential tiles.
Test 6: Tests the end of game condition is correct.
Test 7: Tests the end of game row point calculation is correct.
Test 8: Tests the end of game column point calculation is correct.
Test 9: Tests the end of game number of tile point calculation is correct.
Test 10: Tests one full round of gameplay.
Test 11: Tests the entire system by playing a whole new game to completion.

--------------------------------------
TESTS for 2 Players, 2 Central Factory
--------------------------------------
Corresponding bash file to run: "run_2cf_tests.sh"

Test 1: Tests whether the first player tile goes into broken tiles correctly when the player chooses tiles from central factory 0 for the very first time that round, and other first player tile is removed. 
Test 2: Tests whether the first player tile goes into broken tiles correctly when the player chooses tiles from central factory 1 for the very first time that round, and other first player tile is removed. 
Test 3: Tests the 5th turn command is not necessary when a factory has tiles that are all of the same colour (no need to specify central factory). 
Test 4: Tests one full round of gameplay.
Test 5: Tests the entire system by playing a whole new game to completion.
Test 6: Tests the entire system by playing a whole new game to completion.
Test 7: Tests the entire system by playing a whole new game to completion.

--------------------------------------
TESTS for 3 Players, 1 Central Factory
--------------------------------------
Corresponding bash file to run "run_34player_tests.sh"

Test 1: Tests one turn of all players, i.e. the turns are cycled properly when there are 3 players.
Test 2: Tests one full round of gameplay.
Test 3: Tests the entire system by playing a whole new game to completion.
Test 4: Tests the entire system by playing a whole new game to completion.
Test 5: Tests the entire system by playing a whole new game to completion.

----------------------------------------
TESTS for 3 Players, 2 Central Factories
----------------------------------------
Corresponding bash file to run: "run_2cf_tests.sh"

Test 1: Tests whether the first player tile goes into broken tiles correctly when the player chooses tiles from central factory 0 for the very first time that round, and other first player tile is removed. 
Test 2: Tests whether the first player tile goes into broken tiles correctly when the player chooses tiles from central factory 1 for the very first time that round, and other first player tile is removed. 
Test 3: Tests the 5th turn command is not necessary when a factory has tiles that are all of the same colour (no need to specify central factory). 
Test 4: Tests one full round of gameplay.
Test 5: Tests the entire system by playing a whole new game to completion.
Test 6: Tests the entire system by playing a whole new game to completion.
Test 7: Tests the entire system by playing a whole new game to completion.

--------------------------------------
TESTS for 4 Players, 1 Central Factory
--------------------------------------
Corresponding bash file to run "run_34player_tests.sh"

Test 1: Tests one turn of all players, i.e. the turns are cycled properly when there are 4 players.
Test 2: Tests one full round of gameplay.
Test 3: Tests the entire system by playing a whole new game to completion.
Test 4: Tests the entire system by playing a whole new game to completion.
Test 5: Tests the entire system by playing a whole new game to completion.

----------------------------------------
TESTS for 4 Players, 2 Central Factories
----------------------------------------
Corresponding bash file to run: "run_2cf_tests.sh"

Test 1: Tests whether the first player tile goes into broken tiles correctly when the player chooses tiles from central factory 0 for the very first time that round, and other first player tile is removed. 
Test 2: Tests whether the first player tile goes into broken tiles correctly when the player chooses tiles from central factory 1 for the very first time that round, and other first player tile is removed. 
Test 3: Tests the 5th turn command is not necessary when a factory has tiles that are all of the same colour (no need to specify central factory). 
Test 4: Tests one full round of gameplay.
Test 5: Tests the entire system by playing a whole new game to completion.
Test 6: Tests the entire system by playing a whole new game to completion.
Test 7: Tests the entire system by playing a whole new game to completion.
